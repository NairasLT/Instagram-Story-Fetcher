// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var instagram = Instagram.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    public enum MediaType
    {
        Image = 1,
        Video = 2
    }
    public partial class Instagram
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("latest_reel_media")]
        public long LatestReelMedia { get; set; }

        [JsonProperty("expiring_at")]
        public long ExpiringAt { get; set; }

        [JsonProperty("seen")]
        public long Seen { get; set; }

        [JsonProperty("can_reply")]
        public bool CanReply { get; set; }

        [JsonProperty("can_gif_quick_reply")]
        public bool CanGifQuickReply { get; set; }

        [JsonProperty("can_reshare")]
        public bool CanReshare { get; set; }

        [JsonProperty("reel_type")]
        public string ReelType { get; set; }

        [JsonProperty("is_sensitive_vertical_ad")]
        public bool IsSensitiveVerticalAd { get; set; }

        [JsonProperty("user")]
        public InstagramUser User { get; set; }

        [JsonProperty("items")]
        public Item[] Items { get; set; }

        [JsonProperty("prefetch_count")]
        public long PrefetchCount { get; set; }

        [JsonProperty("has_besties_media")]
        public bool HasBestiesMedia { get; set; }

        [JsonProperty("media_count")]
        public long MediaCount { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class Item
    {
        [JsonProperty("taken_at")]
        public long TakenAt { get; set; }

        [JsonProperty("pk")]
        public double Pk { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("device_timestamp")]
        public long DeviceTimestamp { get; set; }

        [JsonProperty("media_type")]
        public MediaType MediaType { get; set; }

        [JsonProperty("code")]
        public string Code { get; set; }

        [JsonProperty("client_cache_key")]
        public string ClientCacheKey { get; set; }

        [JsonProperty("filter_type")]
        public long FilterType { get; set; }

        [JsonProperty("user")]
        public ItemUser User { get; set; }

        [JsonProperty("caption_is_edited")]
        public bool CaptionIsEdited { get; set; }

        [JsonProperty("image_versions2")]
        public ImageVersions2 ImageVersions2 { get; set; }

        [JsonProperty("original_width")]
        public long OriginalWidth { get; set; }

        [JsonProperty("original_height")]
        public long OriginalHeight { get; set; }

        [JsonProperty("caption_position")]
        public long CaptionPosition { get; set; }

        [JsonProperty("is_reel_media")]
        public bool IsReelMedia { get; set; }

        [JsonProperty("photo_of_you")]
        public bool PhotoOfYou { get; set; }

        [JsonProperty("can_see_insights_as_brand")]
        public bool CanSeeInsightsAsBrand { get; set; }

        [JsonProperty("video_versions")]
        public VideoVersion[] VideoVersions { get; set; }

        [JsonProperty("has_audio")]
        public bool HasAudio { get; set; }

        [JsonProperty("video_duration")]
        public double VideoDuration { get; set; }

        [JsonProperty("caption")]
        public object Caption { get; set; }

        [JsonProperty("organic_tracking_token")]
        public string OrganicTrackingToken { get; set; }

        [JsonProperty("expiring_at")]
        public long ExpiringAt { get; set; }

        [JsonProperty("sharing_friction_info")]
        public SharingFrictionInfo SharingFrictionInfo { get; set; }

        [JsonProperty("is_in_profile_grid")]
        public bool IsInProfileGrid { get; set; }

        [JsonProperty("profile_grid_control_enabled")]
        public bool ProfileGridControlEnabled { get; set; }

        [JsonProperty("is_shop_the_look_eligible")]
        public bool IsShopTheLookEligible { get; set; }

        [JsonProperty("deleted_reason")]
        public long DeletedReason { get; set; }

        [JsonProperty("can_reshare")]
        public bool CanReshare { get; set; }

        [JsonProperty("can_reply")]
        public bool CanReply { get; set; }

        [JsonProperty("supports_reel_reactions")]
        public bool SupportsReelReactions { get; set; }

        [JsonProperty("can_send_custom_emojis")]
        public bool CanSendCustomEmojis { get; set; }

        [JsonProperty("show_one_tap_fb_share_tooltip")]
        public bool ShowOneTapFbShareTooltip { get; set; }
    }

    public partial class ImageVersions2
    {
        [JsonProperty("candidates")]
        public Candidate[] Candidates { get; set; }
    }

    public partial class Candidate
    {
        [JsonProperty("width")]
        public long Width { get; set; }

        [JsonProperty("height")]
        public long Height { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("scans_profile")]
        public string ScansProfile { get; set; }
    }

    public partial class SharingFrictionInfo
    {
        [JsonProperty("should_have_sharing_friction")]
        public bool ShouldHaveSharingFriction { get; set; }

        [JsonProperty("bloks_app_url")]
        public object BloksAppUrl { get; set; }
    }

    public partial class ItemUser
    {
        [JsonProperty("pk")]
        public long Pk { get; set; }

        [JsonProperty("username")]
        public string Username { get; set; }

        [JsonProperty("full_name")]
        public string FullName { get; set; }

        [JsonProperty("is_private")]
        public bool IsPrivate { get; set; }

        [JsonProperty("profile_pic_url")]
        public Uri ProfilePicUrl { get; set; }

        [JsonProperty("profile_pic_id")]
        public string ProfilePicId { get; set; }

        [JsonProperty("is_verified")]
        public bool IsVerified { get; set; }

        [JsonProperty("has_anonymous_profile_picture")]
        public bool HasAnonymousProfilePicture { get; set; }

        [JsonProperty("is_unpublished")]
        public bool IsUnpublished { get; set; }

        [JsonProperty("is_favorite")]
        public bool IsFavorite { get; set; }

        [JsonProperty("account_badges")]
        public object[] AccountBadges { get; set; }
    }

    public partial class VideoVersion
    {
        [JsonProperty("type")]
        public long Type { get; set; }

        [JsonProperty("width")]
        public long Width { get; set; }

        [JsonProperty("height")]
        public long Height { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }
    }

    public partial class InstagramUser
    {
        [JsonProperty("pk")]
        public long Pk { get; set; }

        [JsonProperty("username")]
        public string Username { get; set; }

        [JsonProperty("full_name")]
        public string FullName { get; set; }

        [JsonProperty("is_private")]
        public bool IsPrivate { get; set; }

        [JsonProperty("profile_pic_url")]
        public Uri ProfilePicUrl { get; set; }

        [JsonProperty("profile_pic_id")]
        public string ProfilePicId { get; set; }

        [JsonProperty("friendship_status")]
        public FriendshipStatus FriendshipStatus { get; set; }

        [JsonProperty("is_verified")]
        public bool IsVerified { get; set; }
    }

    public partial class FriendshipStatus
    {
        [JsonProperty("following")]
        public bool Following { get; set; }

        [JsonProperty("followed_by")]
        public bool FollowedBy { get; set; }

        [JsonProperty("blocking")]
        public bool Blocking { get; set; }

        [JsonProperty("muting")]
        public bool Muting { get; set; }

        [JsonProperty("is_private")]
        public bool IsPrivate { get; set; }

        [JsonProperty("incoming_request")]
        public bool IncomingRequest { get; set; }

        [JsonProperty("outgoing_request")]
        public bool OutgoingRequest { get; set; }

        [JsonProperty("is_bestie")]
        public bool IsBestie { get; set; }

        [JsonProperty("is_restricted")]
        public bool IsRestricted { get; set; }
    }

    public partial class Instagram
    {
        public static Instagram FromJson(string json) => JsonConvert.DeserializeObject<Instagram>(json, QuickType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Instagram self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
